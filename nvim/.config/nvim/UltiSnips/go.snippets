snippet testr "t.Run(...)" b
t.Run("${1:message}", func(t *testing.T) {
	${0:${VISUAL}}
})
endsnippet

snippet ter "if err != nil { t.Errorf(...) }" b
if ${1:err} != nil {
	t.Errorf("${2:Unexpected error}: %v", $1)
}
endsnippet

snippet ten "if err == nil { t.Fatal(...) }" b
if ${1:err} == nil {
	t.Fatal("${2:Expected an error}")
}
endsnippet

snippet teq "if got != expected { t.Errorf(...) }" b
if ${1:got} != ${2:expected} {
	t.Errorf("${3:expected %q, got %q}", $2, $1)
}
endsnippet

snippet tou "if output != '' { t.Errorf(...) }" b
if ${1:output} != "" {
	t.Errorf("${2:Unexpected output}: %v", $1)
}
endsnippet

snippet gomock "gomock.NewController" b
ctrl := gomock.NewController(t)
endsnippet

snippet mockgen "//go:generate mockgen" b
//go:generate mockgen -source `!p snip.rv = fn` -destination `!p snip.rv = snip.basename`_mock.go -package `!p snip.rv = os.path.basename(os.path.dirname(path))`
endsnippet
